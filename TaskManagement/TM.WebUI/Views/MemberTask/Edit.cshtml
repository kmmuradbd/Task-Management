@model TM.Service.ViewModel.MemberTaskViewModel
@using UIHtmlHelper;
@using TM.Infrastructure;
@using System.Threading;
@{
    ViewBag.Title = "Task Edit";
    TMIdentity identity = null;
}

@using (Ajax.BeginForm("Edit", "MemberTask", new AjaxOptions { HttpMethod = "POST" }, new { @class = "form-horizontal" }))
{

    try
    {
        identity = (TMIdentity)Thread.CurrentPrincipal.Identity;

    }
    catch (Exception ex)
    {
        // Log the exception or handle it as needed
        Console.WriteLine(ex.Message);
    }
    <section class="innerSection clearfix">
        <a class="btn btn-primary btn-back" href="/MemberTask">back</a>
        <h3>Edit Task</h3>
        <div class="row">
            @Html.HiddenFor(model => model.Id)
            <div class="col-sm-6 col-md-6">
                @if (identity != null && identity.RoleId == 2)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.ProjectId)<sup class="orange">*</sup>
                        </div>
                        <div class="col-sm-9">
                            @Html.SimpleDropDownFor(model => model.ProjectId, "/Project/GetProjectList/")
                            @Html.ValidationMessageFor(model => model.ProjectId)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.Name)<sup class="orange">*</sup>
                        </div>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.MemberName)<sup class="orange">*</sup>
                        </div>
                        <div class="col-sm-9">
                            @Html.SimpleDropDownFor(model => model.MemberId, "/User/GetUserList?roleId=3")
                            @Html.ValidationMessageFor(model => model.MemberId)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.LabelFor(model => model.Status)<sup class="orange">*</sup>
                    </div>
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.Status, new SelectList(
                     new List<Object>{
                        new { value = "Pending" , text = "Pending"  },
                        new { value = "Doing" , text = "Doing" },
                        new { value = "Complte", text = "Complte"}
                     },
                   "value",
                   "text"))
                        @Html.ValidationMessageFor(model => model.MemberId)
                    </div>
                </div>
                @if (identity != null && identity.RoleId == 3)
                {
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.Comments)
                        </div>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Comments)
                            @Html.ValidationMessageFor(model => model.Comments)
                        </div>
                    </div>
                }

                @if (identity != null && identity.RoleId == 2)
                {

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.Remarks)
                        </div>
                        <div class="col-sm-9">
                            @Html.TextBoxFor(model => model.Remarks)
                            @Html.ValidationMessageFor(model => model.Remarks)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.LabelFor(model => model.IsActive)
                        </div>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.IsActive)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                        <button type="submit" class="btn btn-default btn-primary">save</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

}


